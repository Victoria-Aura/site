# Generated by Django 4.2.4 on 2023-08-28 17:32

import backend.models
from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('date_of_becoming_an_esportsman', models.DateField(auto_now=True)),
                ('name', models.CharField(max_length=100)),
                ('age', models.IntegerField(default=0)),
                ('text_info', models.TextField(blank=True)),
                ('type_user', models.CharField(choices=[('CA', 'Captain'), ('PL', 'Player'), ('CO', 'Coach'), ('MA', 'Manager')], default='PL', max_length=2)),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='ImgFiles',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_img', models.CharField(choices=[('MN', 'Main img'), ('TO', 'Tournament'), ('NW', 'News'), ('US', 'User'), ('TM', 'Team'), ('CO', 'Countries'), ('GD', 'Game Discipline')], default='NW', max_length=2)),
                ('file', models.ImageField(upload_to=backend.models.path_img)),
                ('name', models.CharField(blank=True, max_length=100)),
            ],
            options={
                'verbose_name': 'Изображение',
                'verbose_name_plural': 'Изображения',
            },
        ),
        migrations.CreateModel(
            name='Match',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('result', models.CharField(max_length=10)),
                ('map_veto', models.TextField()),
                ('date', models.DateField()),
                ('text_info', models.JSONField()),
                ('videofile', models.FileField(null=True, upload_to='videos/')),
                ('img', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='backend.imgfiles')),
            ],
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('short_name', models.CharField(max_length=5)),
                ('ava', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='backend.imgfiles')),
            ],
            options={
                'verbose_name': 'Команда',
                'verbose_name_plural': 'Команды',
            },
        ),
        migrations.CreateModel(
            name='Tournament',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('data_start', models.DateField()),
                ('data_end', models.DateField()),
                ('ava', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='backend.imgfiles')),
                ('schedule', models.ManyToManyField(to='backend.match')),
                ('teams', models.ManyToManyField(to='backend.team')),
            ],
        ),
        migrations.AddField(
            model_name='team',
            name='tournaments',
            field=models.ManyToManyField(blank=True, to='backend.tournament'),
        ),
        migrations.AddField(
            model_name='team',
            name='users',
            field=models.ManyToManyField(blank=True, related_name='users', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='News',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('time', models.TimeField()),
                ('short_text', models.CharField(max_length=100)),
                ('full_text', models.TextField()),
                ('name', models.CharField(blank=True, max_length=100)),
                ('slug', models.SlugField(max_length=255, unique=True, verbose_name='URL')),
                ('img', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='img', to='backend.imgfiles')),
            ],
            options={
                'verbose_name': 'Новость',
                'verbose_name_plural': 'Новости',
            },
        ),
        migrations.AddField(
            model_name='match',
            name='teams',
            field=models.ManyToManyField(related_name='teams', to='backend.team'),
        ),
        migrations.AddField(
            model_name='match',
            name='winner',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='winner', to='backend.team'),
        ),
        migrations.CreateModel(
            name='GameDiscipline',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('text_info', models.TextField()),
                ('slug', models.SlugField(max_length=255, null=True, unique=True, verbose_name='URL')),
                ('img', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='backend.imgfiles')),
            ],
            options={
                'verbose_name': 'Игровая дисциплина',
                'verbose_name_plural': 'Игровые дисциплины',
            },
        ),
        migrations.CreateModel(
            name='Countries',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('ava', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='backend.imgfiles')),
            ],
        ),
        migrations.AddField(
            model_name='user',
            name='ava',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='backend.imgfiles'),
        ),
        migrations.AddField(
            model_name='user',
            name='country',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='backend.countries'),
        ),
        migrations.AddField(
            model_name='user',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='user',
            name='main_game',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='backend.gamediscipline'),
        ),
        migrations.AddField(
            model_name='user',
            name='team',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='team', to='backend.team'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions'),
        ),
    ]
